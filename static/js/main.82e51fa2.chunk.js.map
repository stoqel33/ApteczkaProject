{"version":3,"sources":["context.js","Theme/GlobalStyle.js","Styled/Link.js","Components/List/Item/Item.js","Components/List/List.js","Views/Medicine/Medicine.js","Components/Form/Label/Input/Inputs.js","Components/Form/Label/Label.js","Components/Form/Form.js","Views/AddMedicine/AddMedicine.js","Components/Form/FormEdit.js","Views/EditMedicine/EditMedicine.js","Views/Root/Root.js","index.js"],"names":["AppContext","React","createContext","GlobalStyle","createGlobalStyle","styled","Link","Wrapper","div","Title","span","TitleName","Value","Item","id","name","amount","date","to","List","currentMedicines","medicines","filter","currentMedicine","show","map","medicine","key","h1","Empty","ButtonAddNew","button","Medicine","Consumer","context","length","handle","Input","input","InputAmount","Inputs","type","placeholder","autoComplete","value","onChange","minAmount","minDate","min","defaultProps","MedicineLabel","label","h2","Label","children","htmlFor","FormAdd","form","WrapperMedicine","ButtonAdd","Form","state","nameMedicine","amountMedicine","dateMedicine","props","today","handleInputChange","e","target","replace","setState","nowDate","Date","handleClickSubmit","nameMed","charAt","toUpperCase","slice","addMedicine","this","onClick","Component","AddMedicine","FormEdit","changeMedicine","console","log","url","axios","get","params","then","resp","data","_id","toString","expiryDate","EditMedicine","match","Root","toISOString","newMedicine","Number","prevState","post","res","allMedicines","newMed","window","location","prevProps","contextElements","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82e51fa2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","import { createGlobalStyle } from 'styled-components/macro';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body{\r\n    font-size: 1.6rem;\r\n    font-family: 'Montserrat', sans-serif;\r\n    background: linear-gradient(135deg, rgba(97,13,103,1) 41%, rgba(167,98,98,1) 100%);\r\n    min-height: 100vh;\r\n\r\n    @media screen and (min-width: 800px) {\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n      }\r\n    }\r\n\r\n  textarea:focus,\r\n  input:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  input[type='number']::-webkit-outer-spin-button,\r\n  input[type='number']::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  input[type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components/macro';\r\n\r\nexport default styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'Styled/Link';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px 40px;\r\n  margin-bottom: 20px;\r\n  background-color: rgba(245, 245, 245, 0.3);\r\n  border-radius: 10%;\r\n\r\n  &:last-child {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 18px;\r\n  margin-bottom: 7px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst TitleName = styled(Title)`\r\n  font-size: 25px;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  margin-left: 8px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Item = ({ id, name, amount, date }) => {\r\n  return (\r\n    <Wrapper>\r\n      <TitleName>\r\n        Lek <Value>{name}</Value>\r\n      </TitleName>\r\n      <Title>\r\n        Ilość <Value>{amount}</Value>\r\n      </Title>\r\n      <Title>\r\n        Data ważności <Value>{date}</Value>\r\n      </Title>\r\n      <Link to={`/ApteczkaProject/editMedicine/${id}`}>\r\n        <span>edytuj</span>\r\n      </Link>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from 'Components/List/Item/Item';\r\nimport styled from 'styled-components/macro';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 50px;\r\n`;\r\n\r\nconst List = ({ medicines }) => {\r\n  const currentMedicines = medicines.filter(\r\n    (currentMedicine) => currentMedicine.show === true,\r\n  );\r\n  return (\r\n    <Wrapper>\r\n      {currentMedicines.map((medicine) => (\r\n        <Item\r\n          key={medicine.id}\r\n          id={medicine.id}\r\n          name={medicine.name}\r\n          amount={medicine.amount}\r\n          date={medicine.date}\r\n        />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  medicines: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      amount: PropTypes.number,\r\n      date: PropTypes.string,\r\n      show: PropTypes.bool,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport AppContext from 'context';\r\nimport List from 'Components/List/List';\r\nimport Link from 'Styled/Link';\r\nimport Search from '../../Components/Search/Search';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 20px;\r\n  color: white;\r\n`;\r\n\r\nconst Empty = styled.h1`\r\n  margin: 50px 20px;\r\n  padding: 100px 40px;\r\n  background-color: rgba(245, 245, 245, 0.3);\r\n  border-radius: 10%;\r\n  color: black;\r\n`;\r\n\r\nconst ButtonAddNew = styled.button`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  font-size: 35px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n\r\nconst Medicine = () => (\r\n  <AppContext.Consumer>\r\n    {(context) => (\r\n      <Wrapper>\r\n        <Title>Apteczka</Title>\r\n        {context.medicines.length > 0 ? (\r\n          <>\r\n            {/* <Search\r\n              medicines={context.medicines}\r\n              showSearchMedicine={context.showSearchMedicine}\r\n            /> */}\r\n            <List medicines={context.medicines} handle={context.handle} />\r\n          </>\r\n        ) : (\r\n          <Empty>Brak leków</Empty>\r\n        )}\r\n        <ButtonAddNew>\r\n          <Link to=\"/ApteczkaProject/addMedicine\">Dodaj nowy lek</Link>\r\n        </ButtonAddNew>\r\n      </Wrapper>\r\n    )}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default Medicine;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport Proptypes from 'prop-types';\r\n\r\nconst Input = styled.input`\r\n  color: white;\r\n  padding: 10px 0 10px 15px;\r\n  margin-right: 10px;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-left: 1px solid black;\r\n  border-bottom: 1px solid black;\r\n  ::placeholder {\r\n    font-size: 300;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst InputAmount = styled(Input)`\r\n  width: 50px;\r\n`;\r\n\r\nconst Inputs = ({\r\n  type,\r\n  id,\r\n  placeholder,\r\n  autoComplete,\r\n  value,\r\n  onChange,\r\n  minAmount,\r\n  minDate,\r\n}) => {\r\n  return (\r\n    <>\r\n      {(type === 'text' && (\r\n        <Input\r\n          type={type}\r\n          id={id}\r\n          placeholder={placeholder}\r\n          autoComplete={autoComplete}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      )) ||\r\n        (type === 'tel' && (\r\n          <InputAmount\r\n            type={type}\r\n            id={id}\r\n            placeholder={placeholder}\r\n            autoComplete={autoComplete}\r\n            value={value}\r\n            onChange={onChange}\r\n            min={minAmount}\r\n          />\r\n        )) ||\r\n        (type === 'date' && (\r\n          <Input\r\n            type={type}\r\n            id={id}\r\n            placeholder={placeholder}\r\n            autoComplete={autoComplete}\r\n            value={value}\r\n            onChange={onChange}\r\n            min={minDate}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nInputs.propTypes = {\r\n  type: Proptypes.string.isRequired,\r\n  id: Proptypes.string.isRequired,\r\n  placeholder: Proptypes.string,\r\n  autoComplete: Proptypes.string,\r\n  value: Proptypes.string,\r\n  onChange: Proptypes.func.isRequired,\r\n  minAmount: Proptypes.string,\r\n  minDate: Proptypes.string,\r\n};\r\n\r\nInputs.defaultProps = {\r\n  placeholder: '',\r\n  autoComplete: 'on',\r\n  value: '',\r\n  minAmount: '1',\r\n  minDate: '',\r\n};\r\n\r\nexport default Inputs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components/macro';\r\nimport Inputs from 'Components/Form/Label/Input/Inputs';\r\n\r\nconst MedicineLabel = styled.label`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  @media screen and (min-width: 800px) {\r\n    .medicineLabel {\r\n      margin: 0 80px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 20px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Label = ({\r\n  name,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  children,\r\n  autoComplete,\r\n  minAmount,\r\n  minDate,\r\n}) => {\r\n  return (\r\n    <MedicineLabel htmlFor={name}>\r\n      <Title>{children}</Title>\r\n      <Inputs\r\n        type={type}\r\n        id={name}\r\n        placeholder={placeholder}\r\n        autoComplete={autoComplete}\r\n        value={value}\r\n        onChange={onChange}\r\n        minAmount={minAmount}\r\n        minDate={minDate}\r\n      />\r\n    </MedicineLabel>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n  autoComplete: PropTypes.string,\r\n  minAmount: PropTypes.string,\r\n  minDate: PropTypes.string,\r\n};\r\n\r\nLabel.defaultProps = {\r\n  placeholder: '',\r\n  value: '',\r\n  autoComplete: 'on',\r\n  minAmount: '1',\r\n  minDate: '',\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport Link from 'Styled/Link';\r\nimport Label from './Label/Label';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 20px 0;\r\n  color: white;\r\n`;\r\n\r\nconst FormAdd = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nconst WrapperMedicine = styled.div`\r\n  padding: 20px 5px;\r\n  margin: 30px 0;\r\n  background: rgba(245, 245, 245, 0.3);\r\n`;\r\n\r\nconst ButtonAdd = styled.button`\r\n  width: 250px;\r\n  height: 50px;\r\n  margin-top: 20px;\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #a55f62;\r\n  border: 2px solid black;\r\n  background-color: black;\r\n  list-style: none;\r\n  text-decoration: none;\r\n  line-height: 45px;\r\n  text-align: center;\r\n`;\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    nameMedicine: '',\r\n    amountMedicine: '',\r\n    dateMedicine: this.props.today,\r\n  };\r\n\r\n  // Walidacja inputów\r\n  handleInputChange = (e) => {\r\n    if (e.target.type === 'tel') {\r\n      e.target.value = e.target.value.replace(/[^0-9]+/, '');\r\n      if (e.target.value === '0') e.target.value = '0';\r\n      else {\r\n        this.setState({\r\n          [e.target.id]: e.target.value,\r\n        });\r\n      }\r\n    } else if (e.target.type === 'text') {\r\n      e.target.value = e.target.value.replace(/[^a-zA-Z]+/, '');\r\n      this.setState({\r\n        [e.target.id]: e.target.value,\r\n      });\r\n    } else {\r\n      const nowDate = new Date(this.props.today);\r\n      const currentDate = new Date(e.target.value);\r\n      if (currentDate >= nowDate) {\r\n        this.setState({\r\n          [e.target.id]: e.target.value,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Obsługa dodania leku\r\n  handleClickSubmit = () => {\r\n    const { nameMedicine, amountMedicine, dateMedicine } = this.state;\r\n    const nameMed = nameMedicine.charAt(0).toUpperCase() + nameMedicine.slice(1);\r\n    this.props.addMedicine(nameMed, amountMedicine, dateMedicine);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>Dodaj Lek</Title>\r\n        <FormAdd>\r\n          <WrapperMedicine>\r\n            <Label\r\n              name=\"nameMedicine\"\r\n              type=\"text\"\r\n              placeholder=\"Nazwa\"\r\n              autoComplete=\"off\"\r\n              value={this.state.nameMedicine}\r\n              onChange={this.handleInputChange}\r\n            >\r\n              Nazwa leku\r\n            </Label>\r\n          </WrapperMedicine>\r\n\r\n          <WrapperMedicine>\r\n            <Label\r\n              name=\"amountMedicine\"\r\n              type=\"tel\"\r\n              placeholder=\"0\"\r\n              autoComplete=\"off\"\r\n              minAmount=\"1\"\r\n              value={this.state.amountMedicine}\r\n              onChange={this.handleInputChange}\r\n            >\r\n              Ilość Tabletek\r\n            </Label>\r\n          </WrapperMedicine>\r\n\r\n          <WrapperMedicine>\r\n            <Label\r\n              name=\"dateMedicine\"\r\n              type=\"date\"\r\n              minDate={this.props.today}\r\n              value={this.state.dateMedicine}\r\n              onChange={this.handleInputChange}\r\n            >\r\n              Data ważności\r\n            </Label>\r\n          </WrapperMedicine>\r\n        </FormAdd>\r\n\r\n        {this.state.nameMedicine.length > 2 && this.state.amountMedicine.length > 0 ? (\r\n          <Link to=\"/ApteczkaProject/\" onClick={this.handleClickSubmit}>\r\n            <ButtonAdd>DODAJ</ButtonAdd>\r\n          </Link>\r\n        ) : (\r\n          <Link to=\"/ApteczkaProject/AddMedicine/\">\r\n            <ButtonAdd>DODAJ</ButtonAdd>\r\n          </Link>\r\n        )}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport AppContext from 'context';\r\nimport Form from 'Components/Form/Form';\r\n\r\nconst AddMedicine = () => (\r\n  <AppContext.Consumer>\r\n    {(context) => (\r\n      <Form\r\n        addMedicine={context.addMedicine}\r\n        handle={context.handle}\r\n        today={context.today}\r\n      />\r\n    )}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default AddMedicine;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport axios from 'axios';\r\nimport Link from 'Styled/Link';\r\nimport Label from './Label/Label';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 20px 0;\r\n  color: white;\r\n`;\r\n\r\nconst FormAdd = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nconst WrapperMedicine = styled.div`\r\n  padding: 20px 5px;\r\n  margin: 30px 0;\r\n  background: rgba(245, 245, 245, 0.3);\r\n`;\r\n\r\nconst ButtonAdd = styled.button`\r\n  width: 250px;\r\n  height: 50px;\r\n  margin-top: 20px;\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #a55f62;\r\n  border: 2px solid black;\r\n  background-color: black;\r\n  list-style: none;\r\n  text-decoration: none;\r\n  line-height: 45px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nclass FormEdit extends React.Component {\r\n  state = {\r\n    id: '',\r\n    nameMedicine: '',\r\n    amountMedicine: '',\r\n    dateMedicine: '',\r\n  };\r\n\r\n  // Walidacja inputów\r\n  handleInputChange = (e) => {\r\n    if (e.target.type === 'tel') {\r\n      e.target.value = e.target.value.replace(/[^0-9]+/, '');\r\n      if (e.target.value === '0') {\r\n        e.target.value = '0';\r\n      } else {\r\n        this.setState({\r\n          [e.target.id]: e.target.value,\r\n        });\r\n      }\r\n    } else if (e.target.type === 'text') {\r\n      e.target.value = e.target.value.replace(/[^a-zA-Z]+/, '');\r\n      this.setState({\r\n        [e.target.id]: e.target.value,\r\n      });\r\n    } else {\r\n      const nowDate = new Date(this.props.today);\r\n      const currentDate = new Date(e.target.value);\r\n      if (currentDate >= nowDate) {\r\n        this.setState({\r\n          [e.target.id]: e.target.value,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.url);\r\n    axios\r\n      .get(\r\n        'http://localhost:3000/ApteczkaProject/editMedicine/' + this.props.url.params.id,\r\n      )\r\n\r\n      .then((resp) => {\r\n        console.log('12312');\r\n\r\n        this.setState({\r\n          id: resp.data._id,\r\n          nameMedicine: resp.data.name,\r\n          amountMedicine: resp.data.amount.toString(),\r\n          dateMedicine: resp.data.expiryDate.slice(0, 10),\r\n        });\r\n      });\r\n  }\r\n\r\n  // Obsługa dodania leku\r\n  handleClickSubmit = () => {\r\n    const { id, nameMedicine, amountMedicine, dateMedicine } = this.state;\r\n    const nameMed = nameMedicine.charAt(0).toUpperCase() + nameMedicine.slice(1);\r\n    this.props.changeMedicine(id, nameMed, amountMedicine, dateMedicine);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>Edytuj Lek</Title>\r\n        <FormAdd>\r\n          <>\r\n            <WrapperMedicine>\r\n              <Label\r\n                name=\"nameMedicine\"\r\n                type=\"text\"\r\n                placeholder=\"Nazwa\"\r\n                autoComplete=\"off\"\r\n                value={this.state.nameMedicine}\r\n                onChange={this.handleInputChange}\r\n              >\r\n                Nazwa leku\r\n              </Label>\r\n            </WrapperMedicine>\r\n            <WrapperMedicine>\r\n              <Label\r\n                name=\"amountMedicine\"\r\n                type=\"tel\"\r\n                placeholder=\"0\"\r\n                autoComplete=\"off\"\r\n                minAmount=\"1\"\r\n                value={this.state.amountMedicine}\r\n                onChange={this.handleInputChange}\r\n              >\r\n                Ilość Tabletek\r\n              </Label>\r\n            </WrapperMedicine>\r\n\r\n            <WrapperMedicine>\r\n              <Label\r\n                name=\"dateMedicine\"\r\n                type=\"date\"\r\n                minDate={this.props.today}\r\n                value={this.state.dateMedicine}\r\n                onChange={this.handleInputChange}\r\n              >\r\n                Data ważności\r\n              </Label>\r\n            </WrapperMedicine>\r\n          </>\r\n        </FormAdd>\r\n        {this.state.nameMedicine.length > 2 && this.state.amountMedicine.length > 0 ? (\r\n          <Link to=\"/ApteczkaProject/editMedicine\" onClick={this.handleClickSubmit}>\r\n            <ButtonAdd>Zapisz zmiany</ButtonAdd>\r\n          </Link>\r\n        ) : (\r\n          <Link to=\"/ApteczkaProject/editMedicine\">\r\n            <ButtonAdd>Zapisz zmiany</ButtonAdd>\r\n          </Link>\r\n        )}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormEdit;\r\n","import React from 'react';\r\nimport AppContext from 'context';\r\nimport FormEdit from 'Components/Form/FormEdit';\r\n\r\nconst EditMedicine = ({ match }) => (\r\n  <AppContext.Consumer>\r\n    {(context) => (\r\n      <FormEdit\r\n        medicines={context.medicines}\r\n        changeMedicine={context.changeMedicine}\r\n        target={context.target}\r\n        today={context.today}\r\n        url={match}\r\n      />\r\n    )}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default EditMedicine;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, useParams } from 'react-router-dom';\nimport AppContext from 'context';\nimport axios from 'axios';\nimport GlobalStyle from 'Theme/GlobalStyle';\nimport Medicine from 'Views/Medicine/Medicine';\nimport AddMedicine from 'Views/AddMedicine/AddMedicine';\nimport EditMedicine from 'Views/EditMedicine/EditMedicine';\n\nclass Root extends React.Component {\n  id = 0;\n  state = {\n    id: '',\n    today: new Date().toISOString().slice(0, 10),\n    medicines: [],\n  };\n\n  componentDidMount() {\n    axios.get('http://localhost:3000/ApteczkaProject').then((resp) => {\n      if (resp.data.length > 0) {\n        this.setState({\n          medicines: resp.data.map((medicine) => ({\n            id: medicine._id,\n            name: medicine.name,\n            amount: medicine.amount,\n            date: medicine.expiryDate.slice(0, 10),\n            show: true,\n          })),\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('did mout');\n\n    console.log(prevState.medicines[this.state.id]);\n\n    if (prevState.medicines[this.state.id] !== this.state.medicines[this.state.id]) {\n      axios.get('http://localhost:3000/ApteczkaProject').then((resp) => {\n        this.setState({\n          medicines: resp.data.map((medicine) => ({\n            id: medicine._id,\n            name: medicine.name,\n            amount: medicine.amount,\n            date: medicine.expiryDate.slice(0, 10),\n            show: true,\n          })),\n        });\n      });\n    }\n  }\n\n  addMedicine = (name, amount, date) => {\n    const newMedicine = {\n      name: name,\n      amount: Number(amount),\n      expiryDate: date,\n    };\n\n    this.setState((prevState) => ({\n      medicines: [...prevState.medicines, newMedicine],\n    }));\n\n    axios\n      .post('http://localhost:3000/ApteczkaProject/addMedicine', newMedicine)\n      .then((res) => console.log(res.data));\n  };\n\n  changeMedicine = (id, name, amount, date) => {\n    const allMedicines = this.state.medicines;\n    allMedicines[id] = {\n      id,\n      name,\n      amount,\n      date,\n    };\n\n    this.setState({\n      medicines: allMedicines,\n      id,\n    });\n\n    const newMed = {\n      name,\n      amount,\n      expiryDate: date,\n    };\n\n    axios\n      .post('http://localhost:3000/ApteczkaProject/editMedicine/update/' + id, newMed)\n      .then((res) => console.log(res.data));\n\n    window.location = '/ApteczkaProject';\n  };\n\n  // showSearchMedicine = (medicine) => {\n  //   console.log(medicine);\n\n  //   this.setState({\n  //     medicines: medicine,\n  //   });\n  // };\n\n  render() {\n    const contextElements = {\n      today: this.state.today,\n      medicines: this.state.medicines,\n      addMedicine: this.addMedicine,\n      changeMedicine: this.changeMedicine,\n      // showSearchMedicine: this.showSearchMedicine,\n    };\n\n    return (\n      <Router>\n        <GlobalStyle />\n        <AppContext.Provider value={contextElements}>\n          <Switch>\n            <Route exact path=\"/ApteczkaProject\" component={Medicine} />\n            <Route path=\"/ApteczkaProject/addMedicine\" component={AddMedicine} />\n            <Route path=\"/ApteczkaProject/editMedicine/:id\" component={EditMedicine} />\n          </Switch>\n        </AppContext.Provider>\n      </Router>\n    );\n  }\n}\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'Views/Root/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}