{"version":3,"sources":["context.js","Theme/GlobalStyle.js","Components/List/Item/Item.js","Components/List/List.js","Styled/Link.js","Views/Medicine/Medicine.js","Components/Form/Label/Label.js","Components/Form/Form.js","Views/AddMedicine/AddMedicine.js","Views/Root/Root.js","index.js"],"names":["AppContext","React","createContext","GlobalStyle","createGlobalStyle","Wrapper","styled","div","Title","span","TitleName","Value","Item","name","amount","date","remind","List","medicines","map","medicine","key","id","Link","h1","Empty","ButtonAddNew","button","Medicine","Consumer","context","length","to","MedicineLabel","label","h2","Input","input","InputAmount","Label","type","placeholder","value","onChange","children","props","htmlFor","checked","autoComplete","min","defaultProps","FormAdd","form","WrapperMedicine","ButtonAdd","Form","state","nameMedicine","amountMedicine","dateMedicine","Date","toISOString","slice","remindMedicine","handleInputChange","e","target","setState","handleClickSubmit","addMedicine","trim","this","onClick","Component","AddMedicine","Root","prevState","contextElements","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e714451.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400,600&display=swap&subset=latin-ext');\r\n\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body{\r\n    font-size: 1.6rem;\r\n    font-family: 'Montserrat', sans-serif;\r\n    background: linear-gradient(135deg, rgba(97,13,103,1) 10%, rgba(167,98,98,1) 100%);\r\n    min-height: 100vh;\r\n\r\n    @media screen and (min-width: 800px) {\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n      }\r\n    }\r\n\r\n  textarea:focus,\r\n  input:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  input[type='number']::-webkit-outer-spin-button,\r\n  input[type='number']::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  input[type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px 40px;\r\n  margin-bottom: 20px;\r\n  background-color: rgba(245, 245, 245, 0.3);\r\n  border-radius: 10%;\r\n\r\n  &:last-child {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 18px;\r\n  margin-bottom: 7px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst TitleName = styled(Title)`\r\n  font-size: 25px;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  margin-left: 8px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Item = ({ name, amount, date, remind }) => (\r\n  <Wrapper>\r\n    <TitleName>\r\n      Lek <Value>{name}</Value>\r\n    </TitleName>\r\n    <Title>\r\n      Ilość <Value>{amount}</Value>\r\n    </Title>\r\n    <Title>\r\n      Data ważności <Value>{date}</Value>\r\n    </Title>\r\n    {remind ? (\r\n      <Title>\r\n        Przypomnienie\r\n        <Value>TAK</Value>\r\n      </Title>\r\n    ) : (\r\n      <Title>\r\n        Przypomnienie\r\n        <Value>NIE</Value>\r\n      </Title>\r\n    )}\r\n  </Wrapper>\r\n);\r\n\r\nItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  remind: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from 'Components/List/Item/Item';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 50px;\r\n`;\r\n\r\nconst List = ({ medicines }) => {\r\n  return (\r\n    <Wrapper>\r\n      {medicines.map((medicine) => (\r\n        <Item\r\n          key={medicine.id}\r\n          name={medicine.name}\r\n          amount={medicine.amount}\r\n          date={medicine.date}\r\n          remind={medicine.remind}\r\n        />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport default styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AppContext from 'context';\r\nimport List from 'Components/List/List';\r\nimport Link from 'Styled/Link';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 20px;\r\n  color: white;\r\n`;\r\n\r\nconst Empty = styled.h1`\r\n  margin: 50px 20px;\r\n  padding: 100px 40px;\r\n  background-color: rgba(245, 245, 245, 0.3);\r\n  border-radius: 10%;\r\n  color: black;\r\n`;\r\n\r\nconst ButtonAddNew = styled.button`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  font-size: 35px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n\r\nconst Medicine = () => (\r\n  <AppContext.Consumer>\r\n    {(context) => (\r\n      <Wrapper>\r\n        <Title>Apteczka</Title>\r\n        {context.medicines.length > 0 ? (\r\n          <List medicines={context.medicines} />\r\n        ) : (\r\n          <Empty>Brak leków</Empty>\r\n        )}\r\n        <ButtonAddNew>\r\n          <Link to=\"/ApteczkaProject/addMedicine\">Dodaj nowy lek</Link>\r\n        </ButtonAddNew>\r\n      </Wrapper>\r\n    )}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default Medicine;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst MedicineLabel = styled.label`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  @media screen and (min-width: 800px) {\r\n    .medicineLabel {\r\n      margin: 0 80px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 20px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  color: white;\r\n  padding: 10px 0 10px 15px;\r\n  margin-right: 10px;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-left: 1px solid black;\r\n  border-bottom: 1px solid black;\r\n\r\n  ::placeholder {\r\n    font-size: 300;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst InputAmount = styled(Input)`\r\n  width: 50px;\r\n`;\r\n\r\nconst Label = ({ name, type, placeholder, value, onChange, children, ...props }) => {\r\n  return (\r\n    <MedicineLabel htmlFor={name}>\r\n      <Title>{children}</Title>\r\n      {type === 'checkbox' ? (\r\n        <Input type={type} id={name} checked={props.checked} onChange={onChange} />\r\n      ) : type === 'number' ? (\r\n        <InputAmount\r\n          type={type}\r\n          id={name}\r\n          placeholder={placeholder}\r\n          autoComplete={props.autoComplete}\r\n          value={value}\r\n          onChange={onChange}\r\n          min=\"0\"\r\n        />\r\n      ) : (\r\n        <Input\r\n          type={type}\r\n          id={name}\r\n          placeholder={placeholder}\r\n          autoComplete={props.autoComplete}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n    </MedicineLabel>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nLabel.defaultProps = {\r\n  placeholder: '',\r\n  value: '',\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Link from 'Styled/Link';\r\nimport Label from './Label/Label';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 20px 0;\r\n  color: white;\r\n`;\r\n\r\nconst FormAdd = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nconst WrapperMedicine = styled.div`\r\n  padding: 20px 5px;\r\n  margin: 30px 0;\r\n  background: rgba(245, 245, 245, 0.3);\r\n`;\r\n\r\nconst ButtonAdd = styled.button`\r\n  width: 250px;\r\n  height: 50px;\r\n  margin-top: 20px;\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #a55f62;\r\n  border: 2px solid black;\r\n  background-color: black;\r\n  list-style: none;\r\n  text-decoration: none;\r\n  line-height: 45px;\r\n  text-align: center;\r\n`;\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    nameMedicine: '',\r\n    amountMedicine: '0',\r\n    dateMedicine: new Date().toISOString().slice(0, 10),\r\n    remindMedicine: false,\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    if (e.target.type === 'checkbox') {\r\n      this.setState({\r\n        [e.target.id]: e.target.checked,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [e.target.id]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClickSubmit = () => {\r\n    const { nameMedicine, amountMedicine, dateMedicine, remindMedicine } = this.state;\r\n    const newMedicine = this.props.addMedicine(\r\n      nameMedicine.trim(),\r\n      amountMedicine,\r\n      dateMedicine,\r\n      remindMedicine,\r\n    );\r\n    if (newMedicine) {\r\n      this.setState({\r\n        nameMedicine: '',\r\n        amountMedicine: '0',\r\n        dateMedicine: new Date().toISOString().slice(0, 10),\r\n        remindMedicine: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>Dodaj Lek</Title>\r\n        <FormAdd>\r\n          <WrapperMedicine>\r\n            <Label\r\n              name=\"nameMedicine\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              value={this.state.nameMedicine}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Nazwa\"\r\n            >\r\n              Nazwa leku\r\n            </Label>\r\n          </WrapperMedicine>\r\n\r\n          <WrapperMedicine>\r\n            <Label\r\n              name=\"amountMedicine\"\r\n              type=\"number\"\r\n              placeholder=\"0\"\r\n              value={this.state.amountMedicine}\r\n              onChange={this.handleInputChange}\r\n            >\r\n              Ilość Tabletek\r\n            </Label>\r\n          </WrapperMedicine>\r\n\r\n          <WrapperMedicine>\r\n            <Label\r\n              name=\"dateMedicine\"\r\n              type=\"date\"\r\n              value={this.state.dateMedicine}\r\n              onChange={this.handleInputChange}\r\n            >\r\n              Data ważności\r\n            </Label>\r\n          </WrapperMedicine>\r\n\r\n          <WrapperMedicine>\r\n            <Label\r\n              name=\"remindMedicine\"\r\n              type=\"checkbox\"\r\n              checked={this.state.remindMedicine}\r\n              onChange={this.handleInputChange}\r\n            >\r\n              Przypomnienia\r\n            </Label>\r\n          </WrapperMedicine>\r\n        </FormAdd>\r\n\r\n        {this.state.nameMedicine.length > 2 ? (\r\n          <Link to=\"/ApteczkaProject/\" onClick={this.handleClickSubmit}>\r\n            <ButtonAdd>DODAJ</ButtonAdd>\r\n          </Link>\r\n        ) : (\r\n          <Link>\r\n            <ButtonAdd>DODAJ</ButtonAdd>\r\n          </Link>\r\n        )}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport AppContext from 'context';\r\nimport Form from 'Components/Form/Form';\r\n\r\nconst AddMedicine = () => (\r\n  <AppContext.Consumer>\r\n    {(context) => <Form addMedicine={context.addMedicine} />}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default AddMedicine;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AppContext from 'context';\nimport GlobalStyle from 'Theme/GlobalStyle';\nimport Medicine from 'Views/Medicine/Medicine';\nimport AddMedicine from 'Views/AddMedicine/AddMedicine';\n\nclass Root extends React.Component {\n  id = 0;\n  state = {\n    medicines: [],\n  };\n\n  addMedicine = (name, amount, date, remind) => {\n    const medicine = {\n      id: this.id,\n      name,\n      amount,\n      date,\n      remind,\n    };\n    this.id++;\n\n    this.setState((prevState) => ({\n      medicines: [...prevState.medicines, medicine],\n    }));\n    return true;\n  };\n\n  render() {\n    const contextElements = {\n      medicines: this.state.medicines,\n      addMedicine: this.addMedicine,\n    };\n\n    return (\n      <Router>\n        <GlobalStyle />\n        <AppContext.Provider value={contextElements}>\n          <Switch>\n            <Route exact path=\"/ApteczkaProject\" component={Medicine} />\n            <Route path=\"/ApteczkaProject/addMedicine\" component={AddMedicine} />\n          </Switch>\n        </AppContext.Provider>\n      </Router>\n    );\n  }\n}\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'Views/Root/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}