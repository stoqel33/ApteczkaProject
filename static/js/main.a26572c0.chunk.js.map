{"version":3,"sources":["Reducers/index.js","Store/index.js","Theme/GlobalStyle.js","Styled/Link.js","Components/MedicineItem/MedicineItem.js","Actions/index.js","Views/Medicine/Medicine.js","Components/Form/FormAdd.js","Views/AddMedicine/AddMedicine.js","Components/Form/FormEdit.js","Views/EditMedicine/EditMedicine.js","Views/Root/Root.js","index.js"],"names":["initialState","refresh","isLoading","response","rootReducer","state","action","type","medicines","payload","data","newState","forEach","medicine","_id","id","name","amount","expiryDate","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","GlobalStyle","createGlobalStyle","styled","Link","Wrapper","div","Title","span","TitleName","Value","BtnDrug","button","Options","connect","dispatch","takePill","axios","put","then","removeOneMedicine","date","slice","to","onClick","h1","Empty","ButtonAddNew","Medicine","fetchMed","this","props","prevProps","prevState","length","map","key","React","Component","defaultProps","get","catch","err","console","log","MedicineLabel","label","Input","input","InputAmount","TitleMed","h2","Forms","Form","WrapperMedicine","ButtonAdd","addMed","post","addMedicine","today","Date","toISOString","history","useHistory","initialValues","show","validate","values","errors","test","onSubmit","charAt","toUpperCase","push","touched","handleChange","handleSubmit","isSubmitting","placeholder","autoComplete","onChange","value","disabled","AddMedicine","ButtonRemove","changeMed","changeMedicine","removeMed","delete","removeMedicine","backToHome","ownProps","url","match","params","item","Root","exact","path","component","EditMedicine","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a26572c0.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-underscore-dangle */\r\nconst initialState = {\r\n  refresh: false,\r\n  isLoading: false,\r\n  response: true,\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return {\r\n        isLoading: true,\r\n        response: true,\r\n        refresh: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        medicines: [...action.payload.data],\r\n        isLoading: false,\r\n        response: true,\r\n        refresh: false,\r\n      };\r\n    case 'ADD_MED_SUCCESS':\r\n      return {\r\n        medicines: [...state.medicines, action.payload.data],\r\n        response: true,\r\n        refresh: false,\r\n      };\r\n    case 'CHANGE_MED_SUCCESS': {\r\n      const newState = { ...state };\r\n      newState.medicines.forEach((medicine) => {\r\n        if (medicine._id === action.payload.id) {\r\n          medicine.name = action.payload.data.name;\r\n          medicine.amount = action.payload.data.amount;\r\n          medicine.expiryDate = action.payload.data.expiryDate;\r\n        }\r\n      });\r\n      return {\r\n        medicines: newState.medicines,\r\n        response: true,\r\n        refresh: false,\r\n      };\r\n    }\r\n    case 'REMOVE_MED_SUCCESS':\r\n      return {\r\n        medicines: [\r\n          ...state.medicines.filter((medicine) => medicine._id !== action.payload.id),\r\n        ],\r\n        response: true,\r\n        refresh: false,\r\n      };\r\n    case 'REMOVE_ONE_MED_SUCCESS':\r\n      const newState = { ...state };\r\n      newState.medicines.forEach((medicine) => {\r\n        if (medicine._id === action.payload.id) {\r\n          medicine.name = action.payload.data.name;\r\n          medicine.amount = action.payload.data.amount;\r\n          medicine.expiryDate = action.payload.data.expiryDate;\r\n        }\r\n      });\r\n      return {\r\n        refresh: true,\r\n        isLoading: false,\r\n        response: true,\r\n        medicines: newState.medicines,\r\n      };\r\n\r\n    case 'FETCH_FAILURE': {\r\n      return {\r\n        response: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from 'Reducers';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import { createGlobalStyle } from 'styled-components/macro';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body{\r\n    font-size: 1.6rem;\r\n    font-family: 'Montserrat', sans-serif;\r\n    background: linear-gradient(135deg, rgba(97,13,103,1) 41%, rgba(167,98,98,1) 100%);\r\n    min-height: 100vh;\r\n\r\n    @media screen and (min-width: 800px) {\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n      }\r\n    }\r\n\r\n  textarea:focus,\r\n  input:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  input[type='number']::-webkit-outer-spin-button,\r\n  input[type='number']::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  input[type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components/macro';\r\n\r\nexport default styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { connect } from 'react-redux';\r\nimport { removeOneMedicine } from 'Actions';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'Styled/Link';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px 50px;\r\n  margin-bottom: 20px;\r\n  background-color: rgba(245, 245, 245, 0.3);\r\n  border-radius: 10%;\r\n\r\n  &:last-child {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 18px;\r\n  margin-bottom: 7px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst TitleName = styled(Title)`\r\n  font-size: 25px;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  margin-left: 8px;\r\n  font-weight: 700;\r\n`;\r\nconst BtnDrug = styled.button`\r\n  font-size: 18px;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n`;\r\nconst Options = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\nconst MedicineItem = ({ id, name, amount, date, takePill }) => {\r\n  return (\r\n    <Wrapper>\r\n      <TitleName>\r\n        Lek <Value>{name}</Value>\r\n      </TitleName>\r\n      <Title>\r\n        Ilość <Value>{amount}</Value>\r\n      </Title>\r\n      <Title>\r\n        Data ważności <Value>{date.slice(0, 10)}</Value>\r\n      </Title>\r\n      <Options>\r\n        <Link to={`/ApteczkaProject/editMedicine/${id}`}>\r\n          <span>edytuj</span>\r\n        </Link>\r\n        <BtnDrug\r\n          onClick={() => {\r\n            if (amount > 0) {\r\n              takePill(id);\r\n            }\r\n          }}\r\n        >\r\n          Zażyj\r\n        </BtnDrug>\r\n      </Options>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nMedicineItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  takePill: (id) => dispatch(removeOneMedicine(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(MedicineItem);\r\n","import axios from 'axios';\r\n/* eslint-disable import/prefer-default-export */\r\n\r\nexport const fetchMedicines = () => (dispatch) => {\r\n  dispatch({ type: 'FETCH_REQUEST' });\r\n  return axios\r\n    .get('http://localhost:3000/ApteczkaProject/')\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: 'FETCH_SUCCESS',\r\n        payload: {\r\n          data,\r\n        },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({ type: 'FETCH_FAILURE' });\r\n    });\r\n};\r\n\r\nexport const changeMedicine = (medicine, id) => (dispatch) => {\r\n  dispatch({ type: 'CHANGE_MED_REQUEST' });\r\n  return axios\r\n    .post(`http://localhost:3000/ApteczkaProject/editMedicine/update/${id}`, {\r\n      type: medicine,\r\n    })\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: 'CHANGE_MED_SUCCESS',\r\n        payload: {\r\n          data,\r\n          id,\r\n        },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({ type: 'FETCH_FAILURE' });\r\n    });\r\n};\r\n\r\nexport const addMedicine = (medicine) => (dispatch) => {\r\n  dispatch({ type: 'ADD_MED_REQUEST' });\r\n  return axios\r\n    .post('http://localhost:3000/ApteczkaProject/addMedicine', {\r\n      type: medicine,\r\n    })\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: 'ADD_MED_SUCCESS',\r\n        payload: {\r\n          data,\r\n        },\r\n      });\r\n    });\r\n};\r\n\r\nexport const removeOneMedicine = (id) => (dispatch) => {\r\n  dispatch({ type: 'REMOVE_ONE_MED_REQUEST' });\r\n  axios.put(`http://localhost:3000/ApteczkaProject/takePill/${id}`).then(({ data }) => {\r\n    dispatch({\r\n      type: 'REMOVE_ONE_MED_SUCCESS',\r\n      payload: {\r\n        data,\r\n        id,\r\n      },\r\n    });\r\n  });\r\n};\r\n\r\nexport const removeMedicine = (id) => (dispatch) => {\r\n  dispatch({ type: 'REMOVE_MED_REQUEST' });\r\n  axios.delete(`http://localhost:3000/ApteczkaProject/editMedicine/${id}`).then(() => {\r\n    dispatch({\r\n      type: 'REMOVE_MED_SUCCESS',\r\n      payload: {\r\n        id,\r\n      },\r\n    });\r\n  });\r\n};\r\n","/* eslint-disable no-nested-ternary */\r\nimport React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMedicines } from 'Actions';\r\nimport Link from 'Styled/Link';\r\nimport MedicineItem from 'Components/MedicineItem/MedicineItem';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 20px;\r\n  color: white;\r\n`;\r\n\r\nconst Empty = styled.h1`\r\n  margin: 50px 20px;\r\n  padding: 100px 40px;\r\n  background-color: rgba(245, 245, 245, 0.3);\r\n  border-radius: 10%;\r\n  color: black;\r\n`;\r\n\r\nconst ButtonAddNew = styled.button`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  font-size: 35px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n\r\nclass Medicine extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchMed } = this.props;\r\n    fetchMed();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { refresh } = this.props;\r\n    const { fetchMed } = this.props;\r\n    if (refresh !== prevProps.refresh) {\r\n      fetchMed();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { medicines, isLoading, response } = this.props;\r\n    return (\r\n      <>\r\n        {response ? (\r\n          isLoading ? (\r\n            <h1>Wczytywanie</h1>\r\n          ) : (\r\n            <Wrapper>\r\n              <Title>Apteczka</Title>\r\n              {medicines.length > 0 ? (\r\n                medicines.map(({ name, amount, expiryDate, _id }) => (\r\n                  <MedicineItem\r\n                    key={_id}\r\n                    id={_id}\r\n                    name={name}\r\n                    amount={amount}\r\n                    date={expiryDate}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Empty>Brak leków</Empty>\r\n              )}\r\n              <ButtonAddNew>\r\n                <Link to=\"/ApteczkaProject/addMedicine\">Dodaj nowy lek</Link>\r\n              </ButtonAddNew>\r\n            </Wrapper>\r\n          )\r\n        ) : (\r\n          <h1>Sorry, database is down</h1>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMedicine.propTypes = {\r\n  medicines: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      _id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      amount: PropTypes.number.isRequired,\r\n      expiryDate: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMedicine.defaultProps = {\r\n  medicines: [],\r\n};\r\nconst mapStateToProps = (state) => {\r\n  const { medicines, isLoading, response, refresh } = state;\r\n  return { medicines, isLoading, response, refresh };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchMed: () => dispatch(fetchMedicines()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Medicine);\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form } from 'formik';\r\nimport { addMedicine } from 'Actions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\nconst MedicineLabel = styled.label`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  @media screen and (min-width: 800px) {\r\n    .medicineLabel {\r\n      margin: 0 80px;\r\n    }\r\n  }\r\n`;\r\nconst Title = styled.h1`\r\n  margin: 20px 0;\r\n  color: white;\r\n`;\r\nconst Input = styled.input`\r\n  color: white;\r\n  padding: 10px 0 10px 15px;\r\n  margin-right: 10px;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-left: 1px solid black;\r\n  border-bottom: 1px solid black;\r\n  ::placeholder {\r\n    font-size: 300;\r\n    color: white;\r\n  }\r\n`;\r\nconst InputAmount = styled(Input)`\r\n  width: 50px;\r\n`;\r\nconst TitleMed = styled.h2`\r\n  font-size: 20px;\r\n  margin-left: 10px;\r\n`;\r\nconst Forms = styled(Form)`\r\n  width: 100%;\r\n`;\r\n\r\nconst WrapperMedicine = styled.div`\r\n  padding: 20px 5px;\r\n  margin: 30px 0;\r\n  background: rgba(245, 245, 245, 0.3);\r\n`;\r\n\r\nconst ButtonAdd = styled.button`\r\n  width: 250px;\r\n  height: 50px;\r\n  margin: 20px auto 0 auto;\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #a55f62;\r\n  border: 2px solid black;\r\n  background-color: black;\r\n  line-height: 45px;\r\n  text-align: center;\r\n`;\r\n\r\nconst FormAdd = ({ addMed }) => {\r\n  const today = new Date().toISOString().slice(0, 10);\r\n  const history = useHistory();\r\n\r\n  const backToHome = () => {\r\n    history.push('/ApteczkaProject');\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Title>Dodaj Lek</Title>\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          amount: '',\r\n          date: today,\r\n          show: true,\r\n        }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.name) {\r\n            errors.name = 'Wpisz nazwę leku!';\r\n          } else if (/[^a-zA-Z]+/i.test(values.name)) {\r\n            errors.name = 'Nazwa zawiera niedozwolone znaki';\r\n          }\r\n          if (!values.amount) {\r\n            errors.amount = 'Podaj ilość leku!';\r\n          } else if (values.amount < 0) {\r\n            errors.amount = 'Podaj poprawną ilość';\r\n          }\r\n          if (!values.date) {\r\n            errors.date = 'Podaj datę ważności!';\r\n          } else if (values.date < today) {\r\n            errors.date = 'Nie możesz wprowadzić starego leku';\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values) => {\r\n          values.name = values.name.charAt(0).toUpperCase() + values.name.slice(1);\r\n          addMed(values);\r\n          backToHome();\r\n        }}\r\n      >\r\n        {({ values, errors, touched, handleChange, handleSubmit, isSubmitting }) => (\r\n          <Forms onSubmit={handleSubmit}>\r\n            <WrapperMedicine>\r\n              <MedicineLabel>\r\n                <TitleMed>Nazwa</TitleMed>\r\n                <Input\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nazwa leku\"\r\n                  autoComplete=\"off\"\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                />\r\n                {errors.name && touched.name && errors.name}\r\n              </MedicineLabel>\r\n            </WrapperMedicine>\r\n\r\n            <WrapperMedicine>\r\n              <MedicineLabel>\r\n                <TitleMed>Ilość</TitleMed>\r\n                <InputAmount\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  placeholder=\"0\"\r\n                  autoComplete=\"off\"\r\n                  onChange={handleChange}\r\n                  value={values.amount}\r\n                />\r\n                {errors.amount && touched.amount && errors.amount}\r\n              </MedicineLabel>\r\n            </WrapperMedicine>\r\n\r\n            <WrapperMedicine>\r\n              <MedicineLabel>\r\n                <TitleMed>Data ważności</TitleMed>\r\n                <Input\r\n                  name=\"date\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                  value={values.date}\r\n                />\r\n                {errors.date && touched.date && errors.date}\r\n              </MedicineLabel>\r\n            </WrapperMedicine>\r\n            <ButtonAdd type=\"submit\" disabled={isSubmitting}>\r\n              Dodaj lek\r\n            </ButtonAdd>\r\n          </Forms>\r\n        )}\r\n      </Formik>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addMed: (medicine) => dispatch(addMedicine(medicine)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FormAdd);\r\n","import React from 'react';\r\nimport FormAdd from 'Components/Form/FormAdd';\r\n\r\nconst AddMedicine = () => {\r\n  return (\r\n    <>\r\n      <FormAdd />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMedicine;\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { Formik, Form } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { changeMedicine, removeMedicine } from 'Actions';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\nconst Title = styled.h1`\r\n  margin: 20px 0;\r\n  color: white;\r\n`;\r\nconst MedicineLabel = styled.label`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  @media screen and (min-width: 800px) {\r\n    .medicineLabel {\r\n      margin: 0 80px;\r\n    }\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  color: white;\r\n  padding: 10px 0 10px 15px;\r\n  margin-right: 10px;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-left: 1px solid black;\r\n  border-bottom: 1px solid black;\r\n  ::placeholder {\r\n    font-size: 300;\r\n    color: white;\r\n  }\r\n`;\r\nconst InputAmount = styled(Input)`\r\n  width: 50px;\r\n`;\r\nconst TitleMed = styled.h2`\r\n  font-size: 20px;\r\n  margin-left: 10px;\r\n`;\r\nconst Forms = styled(Form)`\r\n  width: 100%;\r\n`;\r\nconst WrapperMedicine = styled.div`\r\n  padding: 20px 5px;\r\n  margin: 30px 0;\r\n  background: rgba(245, 245, 245, 0.3);\r\n`;\r\nconst ButtonAdd = styled.button`\r\n  width: 100%;\r\n  height: 50px;\r\n  margin-top: 20px;\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #a55f62;\r\n  border: 2px solid black;\r\n  background-color: black;\r\n  list-style: none;\r\n  text-decoration: none;\r\n  line-height: 45px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\nconst ButtonRemove = styled(ButtonAdd)`\r\n  width: 200px;\r\n  line-height: 40px;\r\n  height: 40px;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst FormEdit = ({ medicine, changeMed, removeMed }) => {\r\n  const today = new Date().toISOString().slice(0, 10);\r\n  const history = useHistory();\r\n  const backToHome = () => {\r\n    history.push('/ApteczkaProject');\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Title>Edytuj Lek</Title>\r\n      <Formik\r\n        initialValues={{\r\n          name: medicine[0].name,\r\n          amount: medicine[0].amount,\r\n          date: medicine[0].expiryDate.slice(0, 10),\r\n        }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.name) {\r\n            errors.name = 'Wpisz nazwę leku!';\r\n          } else if (/[^a-zA-Z]+/i.test(values.name)) {\r\n            errors.name = 'Nazwa zawiera niedozwolone znaki';\r\n          }\r\n          if (!values.amount) {\r\n            errors.amount = 'Podaj ilość leku!';\r\n          } else if (values.amount < 0) {\r\n            errors.amount = 'Podaj poprawną ilość';\r\n          }\r\n          if (!values.date) {\r\n            errors.date = 'Podaj datę ważności!';\r\n          } else if (values.date < today) {\r\n            errors.date = 'Nie możesz wprowadzić starego leku';\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values) => {\r\n          values.name = values.name.charAt(0).toUpperCase() + values.name.slice(1);\r\n          changeMed(values, medicine[0]._id);\r\n          backToHome();\r\n        }}\r\n      >\r\n        {({ values, errors, touched, handleChange, handleSubmit, isSubmitting }) => (\r\n          <Forms onSubmit={handleSubmit}>\r\n            <WrapperMedicine>\r\n              <MedicineLabel>\r\n                <TitleMed>Nazwa</TitleMed>\r\n                <Input\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                />\r\n                {errors.name && touched.name && errors.name}\r\n              </MedicineLabel>\r\n            </WrapperMedicine>\r\n            <WrapperMedicine>\r\n              <MedicineLabel>\r\n                <TitleMed>Ilość</TitleMed>\r\n                <InputAmount\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  placeholder=\"0\"\r\n                  autoComplete=\"off\"\r\n                  onChange={handleChange}\r\n                  value={values.amount}\r\n                />\r\n                {errors.amount && touched.amount && errors.amount}\r\n              </MedicineLabel>\r\n            </WrapperMedicine>\r\n            <WrapperMedicine>\r\n              <MedicineLabel>\r\n                <TitleMed>Data ważności</TitleMed>\r\n                <Input\r\n                  name=\"date\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                  value={values.date}\r\n                />\r\n                {errors.date && touched.date && errors.date}\r\n              </MedicineLabel>\r\n            </WrapperMedicine>\r\n            <ButtonAdd type=\"submit\" disabled={isSubmitting}>\r\n              Zapisz i wyjdz\r\n            </ButtonAdd>\r\n          </Forms>\r\n        )}\r\n      </Formik>\r\n      <ButtonRemove\r\n        onClick={() => {\r\n          removeMed(medicine[0]._id);\r\n          backToHome();\r\n        }}\r\n      >\r\n        Usuń lek\r\n      </ButtonRemove>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeMed: (medicine, id) => dispatch(changeMedicine(medicine, id)),\r\n  removeMed: (id) => dispatch(removeMedicine(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FormEdit);\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormEdit from 'Components/Form/FormEdit';\r\n\r\nconst EditMedicine = ({ medicine }) => {\r\n  return (\r\n    <>\r\n      <FormEdit medicine={medicine} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { medicines } = state;\r\n  const url = ownProps.match.params.id;\r\n  const medicine = medicines.filter((item) => item._id === url);\r\n  return { medicine };\r\n};\r\nexport default connect(mapStateToProps)(EditMedicine);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'Store';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport Medicine from 'Views/Medicine/Medicine';\r\nimport AddMedicine from 'Views/AddMedicine/AddMedicine';\r\nimport EditMedicine from 'Views/EditMedicine/EditMedicine';\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <GlobalStyle />\r\n      <Switch>\r\n        <Route exact path=\"/ApteczkaProject\" component={Medicine} />\r\n        <Route path=\"/ApteczkaProject/addMedicine\" component={AddMedicine} />\r\n        <Route path=\"/ApteczkaProject/editMedicine/:id\" component={EditMedicine} />\r\n      </Switch>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'Views/Root/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}