{"version":3,"sources":["Components/Form/Label/Label.module.scss","context.js","Components/List/Item/Item.js","Components/List/List.js","Views/Medicine/Medicine.js","Components/Form/Label/Label.js","Components/Form/Form.js","Views/AddMedicine/AddMedicine.js","Views/Root/Root.js","index.js","Components/Form/Form.module.scss"],"names":["module","exports","AppContext","React","createContext","Item","name","amount","date","remind","List","medicines","map","medicine","key","id","Medicine","Consumer","context","length","to","Component","Label","type","placeholder","value","onChange","children","props","htmlFor","className","styles","medicineLabel","nameTitle","inputRemind","checked","inputAmount","autoComplete","min","input","Form","state","nameMedicine","amountMedicine","dateMedicine","Date","toISOString","slice","remindMedicine","handleInputChange","e","target","setState","handleClickSubmit","addMedicine","trim","wrapper","title","form","medicineWrapper","this","onClick","btnAdd","AddMedicine","Root","prevState","contextElements","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c0ed7b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"medicineLabel\":\"Label_medicineLabel__1oED8\",\"nameTitle\":\"Label_nameTitle__1f5Yw\",\"input\":\"Label_input__1dSbf\",\"inputAmount\":\"Label_inputAmount__3N3dB\"};","import React from 'react'\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;","import React from 'react'\r\n\r\nconst Item = ({ name, amount, date, remind }) => (\r\n  <>\r\n    <h1>{name}</h1>\r\n    <h2>{amount}</h2>\r\n    <h3>{date}</h3>\r\n    {remind ? <h4>Tak</h4> : <h4>Nie</h4>}\r\n  </>\r\n);\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from './Item/Item';\r\n\r\nconst List = ({ medicines }) => {\r\n  return (\r\n    <>\r\n      {\r\n        medicines.map((medicine) =>\r\n          <Item\r\n            key={medicine.id}\r\n            name={medicine.name}\r\n            amount={medicine.amount}\r\n            date={medicine.date}\r\n            remind={medicine.remind}\r\n          />\r\n        )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport List from '../../Components/List/List';\r\nimport AppContext from '../../context';\r\n\r\nclass Medicine extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {(context) => (\r\n          <>\r\n            {context.medicines.length > 0 ?\r\n              <List medicines={context.medicines} /> :\r\n              <h1>PUSTO</h1>\r\n            }\r\n            <Link to=\"/addMedicine\">Dodaj nowy lek</Link>\r\n          </>\r\n        )}\r\n      </AppContext.Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Medicine;","import React from 'react';\r\nimport styles from './Label.module.scss';\r\n\r\nconst Label = ({ name, type, placeholder, value, onChange, children, ...props }) => {\r\n  return (\r\n    <label htmlFor={name} className={styles.medicineLabel}>\r\n      <h2 className={styles.nameTitle}>{children}</h2>\r\n      {type === \"checkbox\" ?\r\n        <input\r\n          type={type}\r\n          id={name}\r\n          className={styles.inputRemind}\r\n          checked={props.checked}\r\n          onChange={onChange}\r\n        />\r\n        :\r\n        type === 'number' ?\r\n          <input\r\n            type={type}\r\n            id={name}\r\n            className={styles.inputAmount}\r\n            placeholder={placeholder}\r\n            autoComplete={props.autoComplete}\r\n            value={value}\r\n            onChange={onChange}\r\n            min='0'\r\n          /> :\r\n          <input\r\n            type={type}\r\n            id={name}\r\n            className={styles.input}\r\n            placeholder={placeholder}\r\n            autoComplete={props.autoComplete}\r\n            value={value}\r\n            onChange={onChange}\r\n          />\r\n\r\n      }\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Label;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Form.module.scss';\r\nimport Label from './Label/Label';\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    nameMedicine: '',\r\n    amountMedicine: 0,\r\n    dateMedicine: new Date().toISOString().slice(0, 10),\r\n    remindMedicine: false,\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    if (e.target.type === 'checkbox') {\r\n      this.setState({\r\n        [e.target.id]: e.target.checked,\r\n      })\r\n    } else {\r\n      this.setState(({\r\n        [e.target.id]: e.target.value,\r\n      }))\r\n    }\r\n  }\r\n\r\n  handleClickSubmit = () => {\r\n    const { nameMedicine, amountMedicine, dateMedicine, remindMedicine } = this.state;\r\n    const newMedicine = this.props.addMedicine(nameMedicine.trim(), amountMedicine, dateMedicine, remindMedicine);\r\n    if (newMedicine) {\r\n      this.setState({\r\n        nameMedicine: '',\r\n        amountMedicine: 0,\r\n        dateMedicine: new Date().toISOString().slice(0, 10),\r\n        remindMedicine: false,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h1 className={styles.title}>Dodaj Lek</h1>\r\n        <form className={styles.form}>\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"nameMedicine\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              value={this.state.nameMedicine}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Name\"\r\n            >Nazwa leku</Label>\r\n          </div>\r\n\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"amountMedicine\"\r\n              type=\"number\"\r\n              placeholder=\"0\"\r\n              value={this.state.amountMedicine}\r\n              onChange={this.handleInputChange}\r\n            >Ilość Tabletek</Label>\r\n          </div>\r\n\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"dateMedicine\"\r\n              type=\"date\"\r\n              value={this.state.dateMedicine}\r\n              onChange={this.handleInputChange}\r\n            >Data ważności</Label>\r\n          </div>\r\n\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"remindMedicine\"\r\n              type=\"checkbox\"\r\n              checked={this.state.remindMedicine}\r\n              onChange={this.handleInputChange}\r\n            >Przypomnienia</Label>\r\n          </div>\r\n\r\n        </form>\r\n\r\n        <Link\r\n          to=\"/\"\r\n          onClick={this.handleClickSubmit}\r\n          className={styles.btnAdd}>\r\n          DODAJ\r\n        </Link>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Form from '../../Components/Form/Form';\r\nimport AppContext from '../../context';\r\n\r\nclass AddMedicine extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {(context) => (\r\n          <Form\r\n            addMedicine={context.addMedicine}\r\n          />\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddMedicine;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AppContext from '../../context';\nimport Medicine from '../Medicine/Medicine';\nimport AddMedicine from '../AddMedicine/AddMedicine';\n\nclass Root extends React.Component {\n  id = 0;\n  state = {\n    medicines: [],\n  }\n\n  addMedicine = (name, amount, date, remind) => {\n    if (name.length > 2) {\n      const medicine = {\n        id: this.id,\n        name,\n        amount,\n        date,\n        remind,\n      }\n      this.id++;\n\n      this.setState((prevState) => ({\n        medicines: [...prevState.medicines, medicine]\n      }))\n      return true\n    }\n  }\n\n\n  render() {\n    const contextElements = {\n      medicines: this.state.medicines,\n      addMedicine: this.addMedicine\n    }\n\n    return (\n      <Router>\n        <AppContext.Provider value={contextElements}>\n          <Switch>\n            <Route exact path=\"/ApteczkaProject\" component={Medicine} />\n            <Route path=\"/ApteczkaProject/addMedicine\" component={AddMedicine} />\n          </Switch>\n        </AppContext.Provider>\n      </Router>\n    );\n  }\n}\n\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from '../src/Views/Root/Root.js'\nimport './index.module.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__31AVx\",\"title\":\"Form_title__2tGoc\",\"form\":\"Form_form__1YoZ1\",\"medicineWrapper\":\"Form_medicineWrapper__UO38_\",\"btnAdd\":\"Form_btnAdd__7zxpD\"};"],"sourceRoot":""}