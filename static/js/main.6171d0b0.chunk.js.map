{"version":3,"sources":["Components/Form/Label/Label.module.scss","Views/Medicine/Medicine.module.scss","Components/List/List.module.scss","Components/List/Item/Item.module.scss","context.js","Components/List/Item/Item.js","Components/List/List.js","Views/Medicine/Medicine.js","Components/Form/Label/Label.js","Components/Form/Form.js","Views/AddMedicine/AddMedicine.js","Views/Root/Root.js","index.js","Components/Form/Form.module.scss"],"names":["module","exports","AppContext","React","createContext","Item","name","amount","date","remind","className","styles","wrapper","value","List","medicines","map","medicine","key","id","Medicine","Consumer","context","title","length","nothing","to","btnAdd","Component","Label","type","placeholder","onChange","children","props","htmlFor","medicineLabel","nameTitle","inputRemind","checked","inputAmount","autoComplete","min","input","Form","state","nameMedicine","amountMedicine","dateMedicine","Date","toISOString","slice","remindMedicine","handleInputChange","e","target","setState","handleClickSubmit","addMedicine","trim","form","medicineWrapper","this","onClick","AddMedicine","Root","prevState","contextElements","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6171d0b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"medicineLabel\":\"Label_medicineLabel__1oED8\",\"nameTitle\":\"Label_nameTitle__1f5Yw\",\"input\":\"Label_input__1dSbf\",\"inputAmount\":\"Label_inputAmount__3N3dB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Medicine_wrapper__Eil8G\",\"title\":\"Medicine_title__8Oam7\",\"nothing\":\"Medicine_nothing__3EJIw\",\"btnAdd\":\"Medicine_btnAdd__35DPf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"List_wrapper__BAS91\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Item_wrapper__1efYx\",\"value\":\"Item_value__8rIDd\",\"name\":\"Item_name__dIrOo\",\"amount\":\"Item_amount__4hDVi\",\"date\":\"Item_date__3lJv7\",\"remind\":\"Item_remind__2m4e1\"};","import React from 'react'\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;","import React from 'react';\r\nimport styles from './Item.module.scss';\r\n\r\nconst Item = ({ name, amount, date, remind }) => (\r\n  <div className={styles.wrapper}>\r\n    <span\r\n      className={styles.name}\r\n    >\r\n      Lek <span className={styles.value}>{name}</span>\r\n    </span>\r\n    <span\r\n      className={styles.amount}\r\n    >\r\n      Ilość <span className={styles.value}>{amount}</span>\r\n    </span>\r\n    <span\r\n      className={styles.date}\r\n    >\r\n      Data ważności <span className={styles.value}>{date}</span>\r\n    </span>\r\n    {remind ?\r\n      <span className={styles.remind}>Przypomnienie\r\n        <span className={styles.value}>TAK</span>\r\n      </span> :\r\n      <span className={styles.remind}>Przypomnienie\r\n      <span className={styles.value}>NIE</span>\r\n      </span>}\r\n  </div>\r\n);\r\n\r\nexport default Item;","import React from 'react';\r\nimport styles from './List.module.scss';\r\nimport Item from './Item/Item';\r\n\r\nconst List = ({ medicines }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {\r\n        medicines.map((medicine) =>\r\n          <Item\r\n            key={medicine.id}\r\n            name={medicine.name}\r\n            amount={medicine.amount}\r\n            date={medicine.date}\r\n            remind={medicine.remind}\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Medicine.module.scss';\r\nimport List from '../../Components/List/List';\r\nimport AppContext from '../../context';\r\n\r\nclass Medicine extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {(context) => (\r\n          <div className={styles.wrapper}>\r\n            <h1 className={styles.title}>Apteczka</h1>\r\n            {context.medicines.length > 0 ?\r\n              <List medicines={context.medicines} /> :\r\n              <h1 className={styles.nothing}>Brak leków</h1>\r\n            }\r\n            <Link\r\n              to=\"/ApteczkaProject/addMedicine\"\r\n              className={styles.btnAdd}\r\n            >Dodaj nowy lek</Link>\r\n          </div>\r\n        )}\r\n      </AppContext.Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Medicine;","import React from 'react';\r\nimport styles from './Label.module.scss';\r\n\r\nconst Label = ({ name, type, placeholder, value, onChange, children, ...props }) => {\r\n  return (\r\n    <label htmlFor={name} className={styles.medicineLabel}>\r\n      <h2 className={styles.nameTitle}>{children}</h2>\r\n      {type === \"checkbox\" ?\r\n        <input\r\n          type={type}\r\n          id={name}\r\n          className={styles.inputRemind}\r\n          checked={props.checked}\r\n          onChange={onChange}\r\n        />\r\n        :\r\n        type === 'number' ?\r\n          <input\r\n            type={type}\r\n            id={name}\r\n            className={styles.inputAmount}\r\n            placeholder={placeholder}\r\n            autoComplete={props.autoComplete}\r\n            value={value}\r\n            onChange={onChange}\r\n            min='0'\r\n          /> :\r\n          <input\r\n            type={type}\r\n            id={name}\r\n            className={styles.input}\r\n            placeholder={placeholder}\r\n            autoComplete={props.autoComplete}\r\n            value={value}\r\n            onChange={onChange}\r\n          />\r\n\r\n      }\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Label;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Form.module.scss';\r\nimport Label from './Label/Label';\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    nameMedicine: '',\r\n    amountMedicine: 0,\r\n    dateMedicine: new Date().toISOString().slice(0, 10),\r\n    remindMedicine: false,\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    if (e.target.type === 'checkbox') {\r\n      this.setState({\r\n        [e.target.id]: e.target.checked,\r\n      })\r\n    } else {\r\n      this.setState(({\r\n        [e.target.id]: e.target.value,\r\n      }))\r\n    }\r\n  }\r\n\r\n  handleClickSubmit = () => {\r\n    const { nameMedicine, amountMedicine, dateMedicine, remindMedicine } = this.state;\r\n    const newMedicine = this.props.addMedicine(nameMedicine.trim(), amountMedicine, dateMedicine, remindMedicine);\r\n    if (newMedicine) {\r\n      this.setState({\r\n        nameMedicine: '',\r\n        amountMedicine: 0,\r\n        dateMedicine: new Date().toISOString().slice(0, 10),\r\n        remindMedicine: false,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h1 className={styles.title}>Dodaj Lek</h1>\r\n        <form className={styles.form}>\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"nameMedicine\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              value={this.state.nameMedicine}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Name\"\r\n            >Nazwa leku</Label>\r\n          </div>\r\n\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"amountMedicine\"\r\n              type=\"number\"\r\n              placeholder=\"0\"\r\n              value={this.state.amountMedicine}\r\n              onChange={this.handleInputChange}\r\n            >Ilość Tabletek</Label>\r\n          </div>\r\n\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"dateMedicine\"\r\n              type=\"date\"\r\n              value={this.state.dateMedicine}\r\n              onChange={this.handleInputChange}\r\n            >Data ważności</Label>\r\n          </div>\r\n\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"remindMedicine\"\r\n              type=\"checkbox\"\r\n              checked={this.state.remindMedicine}\r\n              onChange={this.handleInputChange}\r\n            >Przypomnienia</Label>\r\n          </div>\r\n\r\n        </form>\r\n\r\n        <Link\r\n          to=\"/ApteczkaProject/\"\r\n          onClick={this.handleClickSubmit}\r\n          className={styles.btnAdd}>\r\n          DODAJ\r\n        </Link>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Form from '../../Components/Form/Form';\r\nimport AppContext from '../../context';\r\n\r\nclass AddMedicine extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {(context) => (\r\n          <Form\r\n            addMedicine={context.addMedicine}\r\n          />\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddMedicine;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AppContext from '../../context';\nimport Medicine from '../Medicine/Medicine';\nimport AddMedicine from '../AddMedicine/AddMedicine';\n\nclass Root extends React.Component {\n  id = 0;\n  state = {\n    medicines: [],\n  }\n\n  addMedicine = (name, amount, date, remind) => {\n    if (name.length > 2) {\n      const medicine = {\n        id: this.id,\n        name,\n        amount,\n        date,\n        remind,\n      }\n      this.id++;\n\n      this.setState((prevState) => ({\n        medicines: [...prevState.medicines, medicine]\n      }))\n      return true\n    }\n  }\n\n\n  render() {\n    const contextElements = {\n      medicines: this.state.medicines,\n      addMedicine: this.addMedicine\n    }\n\n    return (\n      <Router>\n        <AppContext.Provider value={contextElements}>\n          <Switch>\n            <Route exact path=\"/ApteczkaProject\" component={Medicine} />\n            <Route path=\"/ApteczkaProject/addMedicine\" component={AddMedicine} />\n          </Switch>\n        </AppContext.Provider>\n      </Router>\n    );\n  }\n}\n\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from '../src/Views/Root/Root.js'\nimport './index.module.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__31AVx\",\"title\":\"Form_title__2tGoc\",\"form\":\"Form_form__1YoZ1\",\"medicineWrapper\":\"Form_medicineWrapper__UO38_\",\"btnAdd\":\"Form_btnAdd__7zxpD\"};"],"sourceRoot":""}