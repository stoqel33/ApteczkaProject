{"version":3,"sources":["Components/Form/Form.module.scss","Components/List/Item/Item.js","Components/List/List.js","Components/Form/Label/Label.js","Components/Form/Form.js","Components/App/App.js","index.js","Components/Form/Label/Label.module.scss"],"names":["module","exports","Item","List","React","Component","Label","name","type","placeholder","value","onChange","children","props","htmlFor","className","styles","medicineLabel","nameTitle","id","inputRemind","checked","inputAmount","autoComplete","min","input","Form","state","nameMedicine","amountMedicine","dateMedicine","Date","toISOString","slice","remindMedicine","handleInputChange","e","target","setState","handleClickSubmit","addMedicine","trim","wrapper","title","form","medicineWrapper","this","onClick","btnAdd","App","medicines","amount","date","remind","length","medicine","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ece019f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__31AVx\",\"title\":\"Form_title__2tGoc\",\"form\":\"Form_form__1YoZ1\",\"medicineWrapper\":\"Form_medicineWrapper__UO38_\",\"btnAdd\":\"Form_btnAdd__7zxpD\"};","import React from 'react'\r\n\r\nconst Item = () => (\r\n  <>\r\n  </>\r\n);\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from './Item/Item';\r\n\r\nclass List extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Item />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport styles from './Label.module.scss';\r\n\r\nconst Label = ({ name, type, placeholder, value, onChange, children, ...props }) => {\r\n  return (\r\n    <label htmlFor={name} className={styles.medicineLabel}>\r\n      <h2 className={styles.nameTitle}>{children}</h2>\r\n      {type === \"checkbox\" ?\r\n        <input\r\n          type={type}\r\n          id={name}\r\n          className={styles.inputRemind}\r\n          checked={props.checked}\r\n          onChange={onChange}\r\n        />\r\n        :\r\n        type === 'number' ?\r\n          <input\r\n            type={type}\r\n            id={name}\r\n            className={styles.inputAmount}\r\n            placeholder={placeholder}\r\n            autoComplete={props.autoComplete}\r\n            value={value}\r\n            onChange={onChange}\r\n            min='0'\r\n          /> :\r\n          <input\r\n            type={type}\r\n            id={name}\r\n            className={styles.input}\r\n            placeholder={placeholder}\r\n            autoComplete={props.autoComplete}\r\n            value={value}\r\n            onChange={onChange}\r\n          />\r\n\r\n      }\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Label;","import React from 'react';\r\nimport styles from './Form.module.scss';\r\nimport Label from './Label/Label';\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    nameMedicine: '',\r\n    amountMedicine: 0,\r\n    dateMedicine: new Date().toISOString().slice(0, 10),\r\n    remindMedicine: false,\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    if (e.target.type === 'checkbox') {\r\n      this.setState({\r\n        [e.target.id]: e.target.checked,\r\n      })\r\n    } else {\r\n      this.setState(({\r\n        [e.target.id]: e.target.value,\r\n      }))\r\n    }\r\n  }\r\n\r\n  handleClickSubmit = () => {\r\n    const { nameMedicine, amountMedicine, dateMedicine, remindMedicine } = this.state;\r\n    const newMedicine = this.props.addMedicine(nameMedicine.trim(), amountMedicine, dateMedicine, remindMedicine);\r\n    if (newMedicine) {\r\n      this.setState({\r\n        nameMedicine: '',\r\n        amountMedicine: 0,\r\n        dateMedicine: new Date().toISOString().slice(0, 10),\r\n        remindMedicine: false,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h1 className={styles.title}>Dodaj Lek</h1>\r\n        <form className={styles.form}>\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"nameMedicine\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              value={this.state.nameMedicine}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Name\"\r\n            >Nazwa leku</Label>\r\n          </div>\r\n\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"amountMedicine\"\r\n              type=\"number\"\r\n              placeholder=\"0\"\r\n              value={this.state.amountMedicine}\r\n              onChange={this.handleInputChange}\r\n            >Ilość Tabletek</Label>\r\n          </div>\r\n\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"dateMedicine\"\r\n              type=\"date\"\r\n              value={this.state.dateMedicine}\r\n              onChange={this.handleInputChange}\r\n            >Data ważności</Label>\r\n          </div>\r\n\r\n          <div className={styles.medicineWrapper}>\r\n            <Label\r\n              name=\"remindMedicine\"\r\n              type=\"checkbox\"\r\n              checked={this.state.remindMedicine}\r\n              onChange={this.handleInputChange}\r\n            >Przypomnienia</Label>\r\n          </div>\r\n\r\n        </form>\r\n\r\n        <button\r\n          onClick={this.handleClickSubmit}\r\n          className={styles.btnAdd}>\r\n          DODAJ\r\n        </button>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\nimport List from '../List/List';\nimport Form from '../Form/Form';\n\nclass App extends React.Component {\n\n  id = 0;\n  state = {\n    medicines: [],\n  }\n\n  addMedicine = (name, amount, date, remind) => {\n    if (name.length > 2) {\n      const medicine = {\n        id: this.id,\n        amount,\n        date,\n        remind,\n      }\n      this.id++;\n\n      this.setState((prevState) => ({\n        medicines: [...prevState.medicines, medicine]\n      }))\n      return true\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form\n          addMedicine={this.addMedicine}\n        />\n        <List />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\nimport './index.module.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"medicineLabel\":\"Label_medicineLabel__1oED8\",\"nameTitle\":\"Label_nameTitle__1f5Yw\",\"input\":\"Label_input__1dSbf\",\"inputAmount\":\"Label_inputAmount__3N3dB\"};"],"sourceRoot":""}